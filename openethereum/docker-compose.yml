version: '3'
services:
  graph-node:
    image: graphprotocol/graph-node
    ports:
      - "8000:8000"
      - "8001:8001"
      - "8020:8020"
      - '8030:8030'
      - '8040:8040'
    depends_on:
      - ipfs
      - postgres
    environment:
      postgres_host: postgres
      postgres_port: 5432
      postgres_user: graph-node
      postgres_pass: let-me-in
      postgres_db: graph-node
      ipfs: "ipfs:5001"
      ethereum: "mainnet:http://fullnode:8545"
      GRAPH_LOG: debug
      RUST_BACKTRACE: full
  fullnode:
    image: "openethereum/openethereum:v3.0.0"
    command: --config=dev-insecure --jsonrpc-hosts all --jsonrpc-apis all,secretstore,parity_accounts,signer,personal,traces,web3,eth,net,parity,rpc --ws-origins all --ws-hosts all --tracing on --jsonrpc-port 8545 --tx-queue-size 16384 --tx-queue-mem-limit 0 --ws-interface all --jsonrpc-interface all
    ports: 
      - "8545:8545"
      - "8546:8546"
      - "30303:30303"
      - "30303:30303/udp"
  ipfs:
    image: ipfs/go-ipfs
    ports:
      - "5001:5001"
    volumes:
      - ./data/ipfs:/data/ipfs
  postgres:
    image: postgres
    ports:
      - "5432:5432"
    # command: ["postgres", "-cshared_preload_libraries=pg_stat_statements"]
    environment:
      POSTGRES_USER: graph-node
      POSTGRES_PASSWORD: let-me-in
      POSTGRES_DB: graph-node
    volumes:
      - ./data/postgres:/var/lib/postgresql/data