version: '3'
services:
  graph-node:
    image: graphprotocol/graph-node
    ports:
      - "8000:8000"
      - "8001:8001"
      - "8020:8020"
    depends_on:
      - ipfs
      - postgres
    environment:
      postgres_host: postgres
      postgres_port: 5432
      postgres_user: graph-node
      postgres_pass: let-me-in
      postgres_db: graph-node
      ipfs: "ipfs:5001"
      ethereum: "mainnet:http://geth:8545"
      features: archive,traces
  ipfs:
    image: ipfs/go-ipfs
    ports:
      - "5001:5001"
    volumes:
      - ./data/ipfs:/data/ipfs
  postgres:
    image: postgres
    command: ["postgres", "-cshared_preload_libraries=pg_stat_statements"]
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: graph-node
      POSTGRES_PASSWORD: let-me-in
      POSTGRES_DB: graph-node
    volumes:
      - ./data/postgres:/var/lib/postgresql/data
  geth:
    image: ethereum/client-go:v1.9.25
    restart: unless-stopped
    ports:
      - "30303:30303"
      - "30303:30303/udp"
      - "8545:8545"
      - "8546:8546"
    volumes:
      - ./chaindata:/chaindata
    stop_signal: SIGINT
    stop_grace_period: 2m
    command:
      - --nousb
      - --http
      - --http.api=eth,net,web3
      - --http.addr=0.0.0.0
      - --http.vhosts=*
      - --http.corsdomain=*
      - --ws
      - --ws.origins=*
      - --ws.addr=0.0.0.0
      - --ws.api=eth,net,web3
      - --graphql
      - --graphql.corsdomain=*
      - --graphql.vhosts=*
      - --datadir="/chaindata"
      - --dev
    logging:
      driver: "json-file"
      options:
        max-size: "2m"
        max-file: "10"